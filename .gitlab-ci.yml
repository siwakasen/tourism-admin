image: docker:20.10.16

stages:
  - .pre
  - build
  - deploy

# 1) Build frontend/dist artifacts
build_dist:
  stage: .pre
  image: node:23-alpine
  tags:
    - alpine
  script:
    - npm install -g pnpm
    - pnpm install
    - pnpm build
  artifacts:
    paths:
      - dist/
    expire_in: 1 hour

# 2) Development build: tag by commit SHA
docker:
  stage: build
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
  tags:
    - alpine
  image: docker:20.10.16
  services:
    - name: docker:20.10.16-dind
      alias: docker
  variables:
    DOCKER_HOST: "tcp://docker:2375"
    DOCKER_TLS_CERTDIR: ""
    DOCKER_DRIVER: overlay2
  before_script:
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token --password-stdin "$CI_REGISTRY"
    - docker pull "$CI_REGISTRY_IMAGE:cache" || true

  script:
    - docker build  --pull --cache-from "$CI_REGISTRY_IMAGE:latest" --tag "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA" --tag "$CI_REGISTRY_IMAGE:latest" .
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA"
    - docker push "$CI_REGISTRY_IMAGE:latest"

deploy:
  stage: deploy
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
  tags:
    - ubuntu
  image: docker:20.10.16
  services: [] # remove DinD
  variables:
    # no DOCKER_HOST override â†’ uses /var/run/docker.sock
  before_script:
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE:latest
    - docker-compose -f docker-compose.yaml up -d --scale admin=3 --remove-orphans
